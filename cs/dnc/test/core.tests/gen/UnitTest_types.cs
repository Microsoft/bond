
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.6.0.0
//   File : UnitTest_types.cs
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------


// suppress "Missing XML comment for publicly visible type or member"
#pragma warning disable 1591


#region ReSharper warnings
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable InconsistentNaming
// ReSharper disable CheckNamespace
// ReSharper disable UnusedParameter.Local
// ReSharper disable RedundantUsingDirective
#endregion

namespace UnitTest
{
    using System.Collections.Generic;

    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public enum EnumType1
    {
        EnumValue1 = unchecked((int)5),
        EnumValue2 = unchecked((int)10),
        EnumValue3 = unchecked((int)-10),
        EnumValue4 = unchecked((int)42),
        Low = unchecked((int)1),
        EnumValue5 = unchecked((int)-10),
    }

    [global::Bond.Attribute("Foo", "foo")]
    [global::Bond.Attribute("Bar", "bar")]
    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class BasicTypes
    {
        [global::Bond.Attribute("Name", "Boolean")]
        [global::Bond.Id(0)]
        public bool _bool { get; set; }

        [global::Bond.Id(2)]
        public string _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.wstring))]
        public string _wstr { get; set; }

        [global::Bond.Id(10)]
        public ulong _uint64 { get; set; }

        [global::Bond.Id(11)]
        public ushort _uint16 { get; set; }

        [global::Bond.Id(12)]
        public uint _uint32 { get; set; }

        [global::Bond.Id(13)]
        public byte _uint8 { get; set; }

        [global::Bond.Id(14)]
        public sbyte _int8 { get; set; }

        [global::Bond.Id(15)]
        public short _int16 { get; set; }

        [global::Bond.Id(16)]
        public int _int32 { get; set; }

        [global::Bond.Id(17)]
        public long _int64 { get; set; }

        [global::Bond.Id(18)]
        public double _double { get; set; }

        [global::Bond.Id(20)]
        public float _float { get; set; }

        [global::Bond.Id(21)]
        public EnumType1 _enum1 { get; set; }

        [global::Bond.Id(22), global::Bond.Type(typeof(long))]
        public System.DateTime dt { get; set; }

        public BasicTypes()
            : this("UnitTest.BasicTypes", "BasicTypes")
        {}

        protected BasicTypes(string fullName, string name)
        {
            _str = "";
            _wstr = "";
            _enum1 = EnumType1.Low;
            dt = new System.DateTime();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Integers
    {
        [global::Bond.Id(10)]
        public ulong _uint64 { get; set; }

        [global::Bond.Id(11)]
        public ushort _uint16 { get; set; }

        [global::Bond.Id(12)]
        public uint _uint32 { get; set; }

        [global::Bond.Id(13)]
        public byte _uint8 { get; set; }

        [global::Bond.Id(14)]
        public sbyte _int8 { get; set; }

        [global::Bond.Id(15)]
        public short _int16 { get; set; }

        [global::Bond.Id(16)]
        public int _int32 { get; set; }

        [global::Bond.Id(17)]
        public long _int64 { get; set; }

        public Integers()
            : this("UnitTest.Integers", "Integers")
        {}

        protected Integers(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class MaxUInt64
    {
        [global::Bond.Id(10)]
        public ulong _uint64 { get; set; }

        public MaxUInt64()
            : this("UnitTest.MaxUInt64", "MaxUInt64")
        {}

        protected MaxUInt64(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class FieldOfStructWithAliases
    {
        [global::Bond.Id(0)]
        public global::UnitTest.Aliases.BlobAlias b { get; set; }

        [global::Bond.Id(1), global::Bond.Type(typeof(long))]
        public System.DateTime dt { get; set; }

        public FieldOfStructWithAliases()
            : this("UnitTest.FieldOfStructWithAliases", "FieldOfStructWithAliases")
        {}

        protected FieldOfStructWithAliases(string fullName, string name)
        {
            b = new global::UnitTest.Aliases.BlobAlias();
            dt = new System.DateTime();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class ContainerOfStructWithAliases
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(Dictionary<string, List<global::Bond.Tag.nullable<global::UnitTest.Aliases.BlobAlias>>>))]
        public Dictionary<string, List<global::UnitTest.Aliases.BlobAlias>> m { get; set; }

        public ContainerOfStructWithAliases()
            : this("UnitTest.ContainerOfStructWithAliases", "ContainerOfStructWithAliases")
        {}

        protected ContainerOfStructWithAliases(string fullName, string name)
        {
            m = new Dictionary<string, List<global::UnitTest.Aliases.BlobAlias>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class BaseWithAliases
        : global::UnitTest.Aliases.BlobAlias
    {
        
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class NestedWithAliases
    {
        [global::Bond.Id(0)]
        public FieldOfStructWithAliases f { get; set; }

        public NestedWithAliases()
            : this("UnitTest.NestedWithAliases", "NestedWithAliases")
        {}

        protected NestedWithAliases(string fullName, string name)
        {
            f = new FieldOfStructWithAliases();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class RequiredOptional
    {
        [global::Bond.Attribute("JsonName", "OptionalX")]
        [global::Bond.Id(7), global::Bond.RequiredOptional]
        public uint x { get; set; }

        public RequiredOptional()
            : this("UnitTest.RequiredOptional", "RequiredOptional")
        {}

        protected RequiredOptional(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Required
    {
        [global::Bond.Attribute("JsonName", "RequiredX")]
        [global::Bond.Id(7), global::Bond.Required]
        public uint x { get; set; }

        [global::Bond.Attribute("JsonName", "RequiredY")]
        [global::Bond.Id(9), global::Bond.Required]
        public BasicTypes y { get; set; }

        public Required()
            : this("UnitTest.Required", "Required")
        {}

        protected Required(string fullName, string name)
        {
            y = new BasicTypes();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class DerivedRequired
        : Required
    {
        [global::Bond.Id(1), global::Bond.Required]
        public uint foo { get; set; }

        [global::Bond.Id(2), global::Bond.Required]
        public string bar { get; set; }

        [global::Bond.Id(3)]
        public bool flag { get; set; }

        [global::Bond.Id(4), global::Bond.Required]
        public double bla { get; set; }

        public DerivedRequired()
            : this("UnitTest.DerivedRequired", "DerivedRequired")
        {}

        protected DerivedRequired(string fullName, string name)
        {
            bar = "";
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Optional
    {
        [global::Bond.Attribute("JsonName", "OptionalX")]
        [global::Bond.Id(7)]
        public uint x { get; set; }

        [global::Bond.Attribute("JsonName", "OptionalY")]
        [global::Bond.Id(9)]
        public BasicTypes y { get; set; }

        public Optional()
            : this("UnitTest.Optional", "Optional")
        {}

        protected Optional(string fullName, string name)
        {
            y = new BasicTypes();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class RequiredInDerived
        : Optional
    {
        [global::Bond.Id(7), global::Bond.Required]
        new public uint x { get; set; }

        [global::Bond.Id(9), global::Bond.Required]
        new public BasicTypes y { get; set; }

        public RequiredInDerived()
            : this("UnitTest.RequiredInDerived", "RequiredInDerived")
        {}

        protected RequiredInDerived(string fullName, string name)
        {
            y = new BasicTypes();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class RequiredInBase
        : Required
    {
        [global::Bond.Id(7)]
        new public uint x { get; set; }

        [global::Bond.Id(9)]
        new public BasicTypes y { get; set; }

        public RequiredInBase()
            : this("UnitTest.RequiredInBase", "RequiredInBase")
        {}

        protected RequiredInBase(string fullName, string name)
        {
            y = new BasicTypes();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class RequiredInBaseAndDerived
        : Required
    {
        [global::Bond.Id(7), global::Bond.Required]
        new public uint x { get; set; }

        [global::Bond.Id(9), global::Bond.Required]
        new public BasicTypes y { get; set; }

        public RequiredInBaseAndDerived()
            : this("UnitTest.RequiredInBaseAndDerived", "RequiredInBaseAndDerived")
        {}

        protected RequiredInBaseAndDerived(string fullName, string name)
        {
            y = new BasicTypes();
        }
    }

    [global::Bond.Attribute("xmlns", "urn:UnitTest.BasicTypes")]
    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class BasicTypesView
    {
        [global::Bond.Attribute("Name", "Boolean")]
        [global::Bond.Id(0)]
        public bool _bool { get; set; }

        [global::Bond.Id(14)]
        public sbyte _int8 { get; set; }

        [global::Bond.Id(20)]
        public float _float { get; set; }

        public BasicTypesView()
            : this("UnitTest.BasicTypesView", "BasicTypesView")
        {}

        protected BasicTypesView(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Nested1
    {
        [global::Bond.Id(0)]
        public BasicTypes basic1 { get; set; }

        [global::Bond.Id(1)]
        public BasicTypes basic2 { get; set; }

        [global::Bond.Id(2)]
        public global::Bond.GUID guid { get; set; }

        public Nested1()
            : this("UnitTest.Nested1", "Nested1")
        {}

        protected Nested1(string fullName, string name)
        {
            basic1 = new BasicTypes();
            basic2 = new BasicTypes();
            guid = new global::Bond.GUID();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Nested
    {
        [global::Bond.Id(0)]
        public BasicTypes basic { get; set; }

        [global::Bond.Id(1)]
        public Nested1 nested { get; set; }

        public Nested()
            : this("UnitTest.Nested", "Nested")
        {}

        protected Nested(string fullName, string name)
        {
            basic = new BasicTypes();
            nested = new Nested1();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class EmptyBase
        : Nested
    {
        
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Derived
        : EmptyBase
    {
        [global::Bond.Id(0)]
        public string derived { get; set; }

        [global::Bond.Attribute("JsonName", "nestedDerived")]
        [global::Bond.Id(1)]
        new public Nested1 nested { get; set; }

        public Derived()
            : this("UnitTest.Derived", "Derived")
        {}

        protected Derived(string fullName, string name)
        {
            derived = "";
            nested = new Nested1();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class B
    {
        [global::Bond.Id(0)]
        public int b { get; set; }

        public B()
            : this("UnitTest.B", "B")
        {}

        protected B(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class B1
        : B
    {
        [global::Bond.Attribute("JsonName", "b1")]
        [global::Bond.Id(0)]
        new public int b { get; set; }

        public B1()
            : this("UnitTest.B1", "B1")
        {}

        protected B1(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class B2
        : B1
    {
        [global::Bond.Attribute("JsonName", "b2")]
        [global::Bond.Id(0)]
        new public int b { get; set; }

        public B2()
            : this("UnitTest.B2", "B2")
        {}

        protected B2(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class B3
        : B2
    {
        [global::Bond.Attribute("JsonName", "b3")]
        [global::Bond.Id(0)]
        new public int b { get; set; }

        public B3()
            : this("UnitTest.B3", "B3")
        {}

        protected B3(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class B4
        : B3
    {
        [global::Bond.Attribute("JsonName", "b4")]
        [global::Bond.Id(0)]
        new public int b { get; set; }

        public B4()
            : this("UnitTest.B4", "B4")
        {}

        protected B4(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class B5
        : B4
    {
        [global::Bond.Attribute("JsonName", "b5")]
        [global::Bond.Id(0)]
        new public int b { get; set; }

        public B5()
            : this("UnitTest.B5", "B5")
        {}

        protected B5(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Deep
        : B5
    {
        
    }

    [global::Bond.Attribute("xmlns", "urn:UnitTest.Derived")]
    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class DerivedView
        : EmptyBase
    {
        [global::Bond.Id(0)]
        public string derived { get; set; }

        public DerivedView()
            : this("UnitTest.DerivedView", "DerivedView")
        {}

        protected DerivedView(string fullName, string name)
        {
            derived = "";
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Nothing
    {
        [global::Bond.Id(0)]
        public bool? _bool { get; set; }

        [global::Bond.Id(2)]
        public string _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.wstring))]
        public string _wstr { get; set; }

        [global::Bond.Id(10)]
        public ulong? _uint64 { get; set; }

        [global::Bond.Id(11)]
        public ushort? _uint16 { get; set; }

        [global::Bond.Id(12)]
        public uint? _uint32 { get; set; }

        [global::Bond.Id(13)]
        public byte? _uint8 { get; set; }

        [global::Bond.Id(14)]
        public sbyte? _int8 { get; set; }

        [global::Bond.Id(15)]
        public short? _int16 { get; set; }

        [global::Bond.Id(16)]
        public int? _int32 { get; set; }

        [global::Bond.Id(17)]
        public long? _int64 { get; set; }

        [global::Bond.Id(18)]
        public double? _double { get; set; }

        [global::Bond.Id(20)]
        public float? _float { get; set; }

        [global::Bond.Id(21)]
        public EnumType1? _enum1 { get; set; }

        [global::Bond.Id(30)]
        public LinkedList<string> l { get; set; }

        [global::Bond.Id(31)]
        public HashSet<double> s { get; set; }

        [global::Bond.Id(32)]
        public List<LinkedList<int>> vl { get; set; }

        [global::Bond.Id(33)]
        public System.ArraySegment<byte> b { get; set; }

        [global::Bond.Id(34)]
        public Dictionary<string, double> m { get; set; }

        [global::Bond.Id(35), global::Bond.Type(typeof(long))]
        public System.DateTime? dt { get; set; }

        public Nothing()
            : this("UnitTest.Nothing", "Nothing")
        {}

        protected Nothing(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class NotNothingView
    {
        [global::Bond.Id(20), global::Bond.Required]
        public float _float { get; set; }

        [global::Bond.Id(21), global::Bond.Required]
        public EnumType1 _enum1 { get; set; }

        [global::Bond.Id(30), global::Bond.Required]
        public LinkedList<string> l { get; set; }

        [global::Bond.Id(31), global::Bond.Required]
        public HashSet<double> s { get; set; }

        [global::Bond.Id(32), global::Bond.Required]
        public List<LinkedList<int>> vl { get; set; }

        public NotNothingView()
            : this("UnitTest.NotNothingView", "NotNothingView")
        {}

        protected NotNothingView(string fullName, string name)
        {
            _enum1 = EnumType1.EnumValue4;
            l = new LinkedList<string>();
            s = new HashSet<double>();
            vl = new List<LinkedList<int>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class NullableBasicTypes
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.nullable<bool>))]
        public bool? _bool { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(global::Bond.Tag.nullable<string>))]
        public string _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.nullable<global::Bond.Tag.wstring>))]
        public string _wstr { get; set; }

        [global::Bond.Id(10), global::Bond.Type(typeof(global::Bond.Tag.nullable<ulong>))]
        public ulong? _uint64 { get; set; }

        [global::Bond.Id(11), global::Bond.Type(typeof(global::Bond.Tag.nullable<ushort>))]
        public ushort? _uint16 { get; set; }

        [global::Bond.Id(12), global::Bond.Type(typeof(global::Bond.Tag.nullable<uint>))]
        public uint? _uint32 { get; set; }

        [global::Bond.Id(13), global::Bond.Type(typeof(global::Bond.Tag.nullable<byte>))]
        public byte? _uint8 { get; set; }

        [global::Bond.Id(14), global::Bond.Type(typeof(global::Bond.Tag.nullable<sbyte>))]
        public sbyte? _int8 { get; set; }

        [global::Bond.Id(15), global::Bond.Type(typeof(global::Bond.Tag.nullable<short>))]
        public short? _int16 { get; set; }

        [global::Bond.Id(16), global::Bond.Type(typeof(global::Bond.Tag.nullable<int>))]
        public int? _int32 { get; set; }

        [global::Bond.Id(17), global::Bond.Type(typeof(global::Bond.Tag.nullable<long>))]
        public long? _int64 { get; set; }

        [global::Bond.Id(18), global::Bond.Type(typeof(global::Bond.Tag.nullable<double>))]
        public double? _double { get; set; }

        [global::Bond.Id(20), global::Bond.Type(typeof(global::Bond.Tag.nullable<float>))]
        public float? _float { get; set; }

        [global::Bond.Id(21), global::Bond.Type(typeof(global::Bond.Tag.nullable<EnumType1>))]
        public EnumType1? _enum1 { get; set; }

        [global::Bond.Id(22), global::Bond.Type(typeof(global::Bond.Tag.nullable<long>))]
        public System.DateTime? dt { get; set; }

        public NullableBasicTypes()
            : this("UnitTest.NullableBasicTypes", "NullableBasicTypes")
        {}

        protected NullableBasicTypes(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class NullableStruct
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.nullable<BasicTypes>))]
        public BasicTypes basic { get; set; }

        [global::Bond.Id(1), global::Bond.Type(typeof(global::Bond.Tag.nullable<Nested1>))]
        public Nested1 nested { get; set; }

        public NullableStruct()
            : this("UnitTest.NullableStruct", "NullableStruct")
        {}

        protected NullableStruct(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class SimpleContainers
    {
        [global::Bond.Id(0)]
        public List<string> strings { get; set; }

        [global::Bond.Id(1)]
        public List<BasicTypes> basics { get; set; }

        [global::Bond.Id(2)]
        public Dictionary<int, string> numbers { get; set; }

        public SimpleContainers()
            : this("UnitTest.SimpleContainers", "SimpleContainers")
        {}

        protected SimpleContainers(string fullName, string name)
        {
            strings = new List<string>();
            basics = new List<BasicTypes>();
            numbers = new Dictionary<int, string>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Lists
    {
        [global::Bond.Id(0)]
        public LinkedList<bool> _bool { get; set; }

        [global::Bond.Id(2)]
        public LinkedList<string> _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(LinkedList<global::Bond.Tag.wstring>))]
        public LinkedList<string> _wstr { get; set; }

        [global::Bond.Id(10)]
        public LinkedList<ulong> _uint64 { get; set; }

        [global::Bond.Id(11)]
        public LinkedList<ushort> _uint16 { get; set; }

        [global::Bond.Id(12)]
        public LinkedList<uint> _uint32 { get; set; }

        [global::Bond.Id(13)]
        public LinkedList<byte> _uint8 { get; set; }

        [global::Bond.Id(14)]
        public LinkedList<sbyte> _int8 { get; set; }

        [global::Bond.Id(15)]
        public LinkedList<short> _int16 { get; set; }

        [global::Bond.Id(16)]
        public LinkedList<int> _int32 { get; set; }

        [global::Bond.Id(17)]
        public LinkedList<long> _int64 { get; set; }

        [global::Bond.Id(18)]
        public LinkedList<double> _double { get; set; }

        [global::Bond.Id(20)]
        public LinkedList<float> _float { get; set; }

        [global::Bond.Id(21)]
        public LinkedList<EnumType1> _enum1 { get; set; }

        [global::Bond.Id(30)]
        public LinkedList<BasicTypes> basic { get; set; }

        [global::Bond.Id(31)]
        public LinkedList<Nested1> nested { get; set; }

        public Lists()
            : this("UnitTest.Lists", "Lists")
        {}

        protected Lists(string fullName, string name)
        {
            _bool = new LinkedList<bool>();
            _str = new LinkedList<string>();
            _wstr = new LinkedList<string>();
            _uint64 = new LinkedList<ulong>();
            _uint16 = new LinkedList<ushort>();
            _uint32 = new LinkedList<uint>();
            _uint8 = new LinkedList<byte>();
            _int8 = new LinkedList<sbyte>();
            _int16 = new LinkedList<short>();
            _int32 = new LinkedList<int>();
            _int64 = new LinkedList<long>();
            _double = new LinkedList<double>();
            _float = new LinkedList<float>();
            _enum1 = new LinkedList<EnumType1>();
            basic = new LinkedList<BasicTypes>();
            nested = new LinkedList<Nested1>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Vectors
    {
        [global::Bond.Id(0)]
        public List<bool> _bool { get; set; }

        [global::Bond.Id(2)]
        public List<string> _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(List<global::Bond.Tag.wstring>))]
        public List<string> _wstr { get; set; }

        [global::Bond.Id(10)]
        public List<ulong> _uint64 { get; set; }

        [global::Bond.Id(11)]
        public List<ushort> _uint16 { get; set; }

        [global::Bond.Id(12)]
        public List<uint> _uint32 { get; set; }

        [global::Bond.Id(13)]
        public List<byte> _uint8 { get; set; }

        [global::Bond.Id(14)]
        public List<sbyte> _int8 { get; set; }

        [global::Bond.Id(15)]
        public List<short> _int16 { get; set; }

        [global::Bond.Id(16)]
        public List<int> _int32 { get; set; }

        [global::Bond.Id(17)]
        public List<long> _int64 { get; set; }

        [global::Bond.Id(18)]
        public List<double> _double { get; set; }

        [global::Bond.Id(20)]
        public List<float> _float { get; set; }

        [global::Bond.Id(21)]
        public List<EnumType1> _enum1 { get; set; }

        [global::Bond.Id(30)]
        public List<BasicTypes> basic { get; set; }

        [global::Bond.Id(31)]
        public List<Nested1> nested { get; set; }

        public Vectors()
            : this("UnitTest.Vectors", "Vectors")
        {}

        protected Vectors(string fullName, string name)
        {
            _bool = new List<bool>();
            _str = new List<string>();
            _wstr = new List<string>();
            _uint64 = new List<ulong>();
            _uint16 = new List<ushort>();
            _uint32 = new List<uint>();
            _uint8 = new List<byte>();
            _int8 = new List<sbyte>();
            _int16 = new List<short>();
            _int32 = new List<int>();
            _int64 = new List<long>();
            _double = new List<double>();
            _float = new List<float>();
            _enum1 = new List<EnumType1>();
            basic = new List<BasicTypes>();
            nested = new List<Nested1>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Sets
    {
        [global::Bond.Id(0)]
        public HashSet<bool> _bool { get; set; }

        [global::Bond.Id(2)]
        public HashSet<string> _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(HashSet<global::Bond.Tag.wstring>))]
        public HashSet<string> _wstr { get; set; }

        [global::Bond.Id(10)]
        public HashSet<ulong> _uint64 { get; set; }

        [global::Bond.Id(11)]
        public HashSet<ushort> _uint16 { get; set; }

        [global::Bond.Id(12)]
        public HashSet<uint> _uint32 { get; set; }

        [global::Bond.Id(13)]
        public HashSet<byte> _uint8 { get; set; }

        [global::Bond.Id(14)]
        public HashSet<sbyte> _int8 { get; set; }

        [global::Bond.Id(15)]
        public HashSet<short> _int16 { get; set; }

        [global::Bond.Id(16)]
        public HashSet<int> _int32 { get; set; }

        [global::Bond.Id(17)]
        public HashSet<long> _int64 { get; set; }

        [global::Bond.Id(18)]
        public HashSet<double> _double { get; set; }

        [global::Bond.Id(20)]
        public HashSet<float> _float { get; set; }

        [global::Bond.Id(21)]
        public HashSet<EnumType1> _enum1 { get; set; }

        public Sets()
            : this("UnitTest.Sets", "Sets")
        {}

        protected Sets(string fullName, string name)
        {
            _bool = new HashSet<bool>();
            _str = new HashSet<string>();
            _wstr = new HashSet<string>();
            _uint64 = new HashSet<ulong>();
            _uint16 = new HashSet<ushort>();
            _uint32 = new HashSet<uint>();
            _uint8 = new HashSet<byte>();
            _int8 = new HashSet<sbyte>();
            _int16 = new HashSet<short>();
            _int32 = new HashSet<int>();
            _int64 = new HashSet<long>();
            _double = new HashSet<double>();
            _float = new HashSet<float>();
            _enum1 = new HashSet<EnumType1>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Maps
    {
        [global::Bond.Id(0)]
        public Dictionary<string, bool> _bool { get; set; }

        [global::Bond.Id(2)]
        public Dictionary<string, string> _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.wstring>))]
        public Dictionary<string, string> _wstr { get; set; }

        [global::Bond.Id(10)]
        public Dictionary<string, ulong> _uint64 { get; set; }

        [global::Bond.Id(11)]
        public Dictionary<string, ushort> _uint16 { get; set; }

        [global::Bond.Id(12)]
        public Dictionary<string, uint> _uint32 { get; set; }

        [global::Bond.Id(13)]
        public Dictionary<string, byte> _uint8 { get; set; }

        [global::Bond.Id(14)]
        public Dictionary<string, sbyte> _int8 { get; set; }

        [global::Bond.Id(15)]
        public Dictionary<string, short> _int16 { get; set; }

        [global::Bond.Id(16)]
        public Dictionary<string, int> _int32 { get; set; }

        [global::Bond.Id(17)]
        public Dictionary<string, long> _int64 { get; set; }

        [global::Bond.Id(18)]
        public Dictionary<string, double> _double { get; set; }

        [global::Bond.Id(20)]
        public Dictionary<string, float> _float { get; set; }

        [global::Bond.Id(21)]
        public Dictionary<string, EnumType1> _enum1 { get; set; }

        [global::Bond.Id(22)]
        public Dictionary<string, BasicTypes> _basic { get; set; }

        public Maps()
            : this("UnitTest.Maps", "Maps")
        {}

        protected Maps(string fullName, string name)
        {
            _bool = new Dictionary<string, bool>();
            _str = new Dictionary<string, string>();
            _wstr = new Dictionary<string, string>();
            _uint64 = new Dictionary<string, ulong>();
            _uint16 = new Dictionary<string, ushort>();
            _uint32 = new Dictionary<string, uint>();
            _uint8 = new Dictionary<string, byte>();
            _int8 = new Dictionary<string, sbyte>();
            _int16 = new Dictionary<string, short>();
            _int32 = new Dictionary<string, int>();
            _int64 = new Dictionary<string, long>();
            _double = new Dictionary<string, double>();
            _float = new Dictionary<string, float>();
            _enum1 = new Dictionary<string, EnumType1>();
            _basic = new Dictionary<string, BasicTypes>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Containers
    {
        [global::Bond.Id(0)]
        public Lists l { get; set; }

        [global::Bond.Id(1)]
        public Sets s { get; set; }

        [global::Bond.Id(2)]
        public Vectors v { get; set; }

        [global::Bond.Id(3)]
        public Maps m { get; set; }

        public Containers()
            : this("UnitTest.Containers", "Containers")
        {}

        protected Containers(string fullName, string name)
        {
            l = new Lists();
            s = new Sets();
            v = new Vectors();
            m = new Maps();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class VectorsOfNullable
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<bool>>))]
        public List<bool?> _bool { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<string>>))]
        public List<string> _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<global::Bond.Tag.wstring>>))]
        public List<string> _wstr { get; set; }

        [global::Bond.Id(10), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<ulong>>))]
        public List<ulong?> _uint64 { get; set; }

        [global::Bond.Id(11), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<ushort>>))]
        public List<ushort?> _uint16 { get; set; }

        [global::Bond.Id(12), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<uint>>))]
        public List<uint?> _uint32 { get; set; }

        [global::Bond.Id(13), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<byte>>))]
        public List<byte?> _uint8 { get; set; }

        [global::Bond.Id(14), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<sbyte>>))]
        public List<sbyte?> _int8 { get; set; }

        [global::Bond.Id(15), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<short>>))]
        public List<short?> _int16 { get; set; }

        [global::Bond.Id(16), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<int>>))]
        public List<int?> _int32 { get; set; }

        [global::Bond.Id(17), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<long>>))]
        public List<long?> _int64 { get; set; }

        [global::Bond.Id(18), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<double>>))]
        public List<double?> _double { get; set; }

        [global::Bond.Id(20), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<float>>))]
        public List<float?> _float { get; set; }

        [global::Bond.Id(21), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<EnumType1>>))]
        public List<EnumType1?> _enum1 { get; set; }

        [global::Bond.Id(30), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<BasicTypes>>))]
        public List<BasicTypes> basic { get; set; }

        [global::Bond.Id(31), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<Nested1>>))]
        public List<Nested1> nested { get; set; }

        [global::Bond.Id(32), global::Bond.Type(typeof(List<global::Bond.Tag.nullable<System.ArraySegment<byte>>>))]
        public List<System.ArraySegment<byte>> _blob { get; set; }

        public VectorsOfNullable()
            : this("UnitTest.VectorsOfNullable", "VectorsOfNullable")
        {}

        protected VectorsOfNullable(string fullName, string name)
        {
            _bool = new List<bool?>();
            _str = new List<string>();
            _wstr = new List<string>();
            _uint64 = new List<ulong?>();
            _uint16 = new List<ushort?>();
            _uint32 = new List<uint?>();
            _uint8 = new List<byte?>();
            _int8 = new List<sbyte?>();
            _int16 = new List<short?>();
            _int32 = new List<int?>();
            _int64 = new List<long?>();
            _double = new List<double?>();
            _float = new List<float?>();
            _enum1 = new List<EnumType1?>();
            basic = new List<BasicTypes>();
            nested = new List<Nested1>();
            _blob = new List<System.ArraySegment<byte>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class MapsOfNullable
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<bool>>))]
        public Dictionary<string, bool?> _bool { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<string>>))]
        public Dictionary<string, string> _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<global::Bond.Tag.wstring>>))]
        public Dictionary<string, string> _wstr { get; set; }

        [global::Bond.Id(10), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<ulong>>))]
        public Dictionary<string, ulong?> _uint64 { get; set; }

        [global::Bond.Id(11), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<ushort>>))]
        public Dictionary<string, ushort?> _uint16 { get; set; }

        [global::Bond.Id(12), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<uint>>))]
        public Dictionary<string, uint?> _uint32 { get; set; }

        [global::Bond.Id(13), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<byte>>))]
        public Dictionary<string, byte?> _uint8 { get; set; }

        [global::Bond.Id(14), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<sbyte>>))]
        public Dictionary<string, sbyte?> _int8 { get; set; }

        [global::Bond.Id(15), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<short>>))]
        public Dictionary<string, short?> _int16 { get; set; }

        [global::Bond.Id(16), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<int>>))]
        public Dictionary<string, int?> _int32 { get; set; }

        [global::Bond.Id(17), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<long>>))]
        public Dictionary<string, long?> _int64 { get; set; }

        [global::Bond.Id(18), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<double>>))]
        public Dictionary<string, double?> _double { get; set; }

        [global::Bond.Id(20), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<float>>))]
        public Dictionary<string, float?> _float { get; set; }

        [global::Bond.Id(21), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<EnumType1>>))]
        public Dictionary<string, EnumType1?> _enum1 { get; set; }

        [global::Bond.Id(22), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<BasicTypes>>))]
        public Dictionary<string, BasicTypes> _basic { get; set; }

        [global::Bond.Id(23), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.nullable<System.ArraySegment<byte>>>))]
        public Dictionary<string, System.ArraySegment<byte>> _blob { get; set; }

        public MapsOfNullable()
            : this("UnitTest.MapsOfNullable", "MapsOfNullable")
        {}

        protected MapsOfNullable(string fullName, string name)
        {
            _bool = new Dictionary<string, bool?>();
            _str = new Dictionary<string, string>();
            _wstr = new Dictionary<string, string>();
            _uint64 = new Dictionary<string, ulong?>();
            _uint16 = new Dictionary<string, ushort?>();
            _uint32 = new Dictionary<string, uint?>();
            _uint8 = new Dictionary<string, byte?>();
            _int8 = new Dictionary<string, sbyte?>();
            _int16 = new Dictionary<string, short?>();
            _int32 = new Dictionary<string, int?>();
            _int64 = new Dictionary<string, long?>();
            _double = new Dictionary<string, double?>();
            _float = new Dictionary<string, float?>();
            _enum1 = new Dictionary<string, EnumType1?>();
            _basic = new Dictionary<string, BasicTypes>();
            _blob = new Dictionary<string, System.ArraySegment<byte>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class ContainersOfNullable
    {
        [global::Bond.Id(0)]
        public VectorsOfNullable vn { get; set; }

        [global::Bond.Id(1)]
        public MapsOfNullable mn { get; set; }

        public ContainersOfNullable()
            : this("UnitTest.ContainersOfNullable", "ContainersOfNullable")
        {}

        protected ContainersOfNullable(string fullName, string name)
        {
            vn = new VectorsOfNullable();
            mn = new MapsOfNullable();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class NullableVectors
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<bool>>))]
        public List<bool> _bool { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<string>>))]
        public List<string> _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<global::Bond.Tag.wstring>>))]
        public List<string> _wstr { get; set; }

        [global::Bond.Id(10), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<ulong>>))]
        public List<ulong> _uint64 { get; set; }

        [global::Bond.Id(11), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<ushort>>))]
        public List<ushort> _uint16 { get; set; }

        [global::Bond.Id(12), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<uint>>))]
        public List<uint> _uint32 { get; set; }

        [global::Bond.Id(13), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<byte>>))]
        public List<byte> _uint8 { get; set; }

        [global::Bond.Id(14), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<sbyte>>))]
        public List<sbyte> _int8 { get; set; }

        [global::Bond.Id(15), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<short>>))]
        public List<short> _int16 { get; set; }

        [global::Bond.Id(16), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<int>>))]
        public List<int> _int32 { get; set; }

        [global::Bond.Id(17), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<long>>))]
        public List<long> _int64 { get; set; }

        [global::Bond.Id(18), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<double>>))]
        public List<double> _double { get; set; }

        [global::Bond.Id(20), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<float>>))]
        public List<float> _float { get; set; }

        [global::Bond.Id(21), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<EnumType1>>))]
        public List<EnumType1> _enum1 { get; set; }

        [global::Bond.Id(30), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<BasicTypes>>))]
        public List<BasicTypes> basic { get; set; }

        [global::Bond.Id(31), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<Nested1>>))]
        public List<Nested1> nested { get; set; }

        public NullableVectors()
            : this("UnitTest.NullableVectors", "NullableVectors")
        {}

        protected NullableVectors(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class NullableLists
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<bool>>))]
        public LinkedList<bool> _bool { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<string>>))]
        public LinkedList<string> _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<global::Bond.Tag.wstring>>))]
        public LinkedList<string> _wstr { get; set; }

        [global::Bond.Id(10), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<ulong>>))]
        public LinkedList<ulong> _uint64 { get; set; }

        [global::Bond.Id(11), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<ushort>>))]
        public LinkedList<ushort> _uint16 { get; set; }

        [global::Bond.Id(12), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<uint>>))]
        public LinkedList<uint> _uint32 { get; set; }

        [global::Bond.Id(13), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<byte>>))]
        public LinkedList<byte> _uint8 { get; set; }

        [global::Bond.Id(14), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<sbyte>>))]
        public LinkedList<sbyte> _int8 { get; set; }

        [global::Bond.Id(15), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<short>>))]
        public LinkedList<short> _int16 { get; set; }

        [global::Bond.Id(16), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<int>>))]
        public LinkedList<int> _int32 { get; set; }

        [global::Bond.Id(17), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<long>>))]
        public LinkedList<long> _int64 { get; set; }

        [global::Bond.Id(18), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<double>>))]
        public LinkedList<double> _double { get; set; }

        [global::Bond.Id(20), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<float>>))]
        public LinkedList<float> _float { get; set; }

        [global::Bond.Id(21), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<EnumType1>>))]
        public LinkedList<EnumType1> _enum1 { get; set; }

        [global::Bond.Id(30), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<BasicTypes>>))]
        public LinkedList<BasicTypes> basic { get; set; }

        [global::Bond.Id(31), global::Bond.Type(typeof(global::Bond.Tag.nullable<LinkedList<Nested1>>))]
        public LinkedList<Nested1> nested { get; set; }

        public NullableLists()
            : this("UnitTest.NullableLists", "NullableLists")
        {}

        protected NullableLists(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class NullableSets
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<bool>>))]
        public HashSet<bool> _bool { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<string>>))]
        public HashSet<string> _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<global::Bond.Tag.wstring>>))]
        public HashSet<string> _wstr { get; set; }

        [global::Bond.Id(10), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<ulong>>))]
        public HashSet<ulong> _uint64 { get; set; }

        [global::Bond.Id(11), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<ushort>>))]
        public HashSet<ushort> _uint16 { get; set; }

        [global::Bond.Id(12), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<uint>>))]
        public HashSet<uint> _uint32 { get; set; }

        [global::Bond.Id(13), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<byte>>))]
        public HashSet<byte> _uint8 { get; set; }

        [global::Bond.Id(14), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<sbyte>>))]
        public HashSet<sbyte> _int8 { get; set; }

        [global::Bond.Id(15), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<short>>))]
        public HashSet<short> _int16 { get; set; }

        [global::Bond.Id(16), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<int>>))]
        public HashSet<int> _int32 { get; set; }

        [global::Bond.Id(17), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<long>>))]
        public HashSet<long> _int64 { get; set; }

        [global::Bond.Id(18), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<double>>))]
        public HashSet<double> _double { get; set; }

        [global::Bond.Id(20), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<float>>))]
        public HashSet<float> _float { get; set; }

        [global::Bond.Id(21), global::Bond.Type(typeof(global::Bond.Tag.nullable<HashSet<EnumType1>>))]
        public HashSet<EnumType1> _enum1 { get; set; }

        public NullableSets()
            : this("UnitTest.NullableSets", "NullableSets")
        {}

        protected NullableSets(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class NullableMaps
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, bool>>))]
        public Dictionary<float, bool> _bool { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, string>>))]
        public Dictionary<float, string> _str { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, global::Bond.Tag.wstring>>))]
        public Dictionary<float, string> _wstr { get; set; }

        [global::Bond.Id(10), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, ulong>>))]
        public Dictionary<float, ulong> _uint64 { get; set; }

        [global::Bond.Id(11), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, ushort>>))]
        public Dictionary<float, ushort> _uint16 { get; set; }

        [global::Bond.Id(12), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, uint>>))]
        public Dictionary<float, uint> _uint32 { get; set; }

        [global::Bond.Id(13), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, byte>>))]
        public Dictionary<float, byte> _uint8 { get; set; }

        [global::Bond.Id(14), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, sbyte>>))]
        public Dictionary<float, sbyte> _int8 { get; set; }

        [global::Bond.Id(15), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, short>>))]
        public Dictionary<float, short> _int16 { get; set; }

        [global::Bond.Id(16), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, int>>))]
        public Dictionary<float, int> _int32 { get; set; }

        [global::Bond.Id(17), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, long>>))]
        public Dictionary<float, long> _int64 { get; set; }

        [global::Bond.Id(18), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, double>>))]
        public Dictionary<float, double> _double { get; set; }

        [global::Bond.Id(20), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, float>>))]
        public Dictionary<float, float> _float { get; set; }

        [global::Bond.Id(21), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, EnumType1>>))]
        public Dictionary<float, EnumType1> _enum1 { get; set; }

        [global::Bond.Id(22), global::Bond.Type(typeof(global::Bond.Tag.nullable<Dictionary<float, BasicTypes>>))]
        public Dictionary<float, BasicTypes> _basic { get; set; }

        public NullableMaps()
            : this("UnitTest.NullableMaps", "NullableMaps")
        {}

        protected NullableMaps(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class NullableContainers
    {
        [global::Bond.Id(0)]
        public NullableVectors nv { get; set; }

        [global::Bond.Id(1)]
        public NullableLists nl { get; set; }

        [global::Bond.Id(2)]
        public NullableSets ns { get; set; }

        [global::Bond.Id(3)]
        public NullableMaps nm { get; set; }

        public NullableContainers()
            : this("UnitTest.NullableContainers", "NullableContainers")
        {}

        protected NullableContainers(string fullName, string name)
        {
            nv = new NullableVectors();
            nl = new NullableLists();
            ns = new NullableSets();
            nm = new NullableMaps();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Tree
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.nullable<TreeNode>))]
        public TreeNode root { get; set; }

        public Tree()
            : this("UnitTest.Tree", "Tree")
        {}

        protected Tree(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class TreeNode
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.nullable<TreeNode>))]
        public TreeNode left { get; set; }

        [global::Bond.Id(1), global::Bond.Type(typeof(global::Bond.Tag.nullable<TreeNode>))]
        public TreeNode right { get; set; }

        [global::Bond.Id(2)]
        public BasicTypes value { get; set; }

        [global::Bond.Id(3)]
        public LinkedList<Tree> trees { get; set; }

        public TreeNode()
            : this("UnitTest.TreeNode", "TreeNode")
        {}

        protected TreeNode(string fullName, string name)
        {
            value = new BasicTypes();
            trees = new LinkedList<Tree>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class StructWithDefaults
    {
        [global::Bond.Id(0)]
        public bool m_bool_1 { get; set; }

        [global::Bond.Id(1)]
        public bool m_bool_2 { get; set; }

        [global::Bond.Id(2)]
        public bool m_bool_3 { get; set; }

        [global::Bond.Id(3)]
        public string m_str_1 { get; set; }

        [global::Bond.Id(4)]
        public string m_str_2 { get; set; }

        [global::Bond.Id(5)]
        public sbyte m_int8_4 { get; set; }

        [global::Bond.Id(6)]
        public sbyte m_int8_5 { get; set; }

        [global::Bond.Id(7)]
        public short m_int16_4 { get; set; }

        [global::Bond.Id(8)]
        public short m_int16_5 { get; set; }

        [global::Bond.Id(9)]
        public int m_int32_4 { get; set; }

        [global::Bond.Id(10)]
        public int m_int32_max { get; set; }

        [global::Bond.Id(11)]
        public long m_int64_4 { get; set; }

        [global::Bond.Id(12)]
        public long m_int64_max { get; set; }

        [global::Bond.Id(13)]
        public byte m_uint8_2 { get; set; }

        [global::Bond.Id(14)]
        public byte m_uint8_3 { get; set; }

        [global::Bond.Id(15)]
        public ushort m_uint16_2 { get; set; }

        [global::Bond.Id(16)]
        public ushort m_uint16_3 { get; set; }

        [global::Bond.Id(17)]
        public uint m_uint32_3 { get; set; }

        [global::Bond.Id(18)]
        public uint m_uint32_max { get; set; }

        [global::Bond.Id(19)]
        public ulong m_uint64_3 { get; set; }

        [global::Bond.Id(20)]
        public ulong m_uint64_max { get; set; }

        [global::Bond.Id(21)]
        public double m_double_3 { get; set; }

        [global::Bond.Id(22)]
        public double m_double_4 { get; set; }

        [global::Bond.Id(23)]
        public double m_double_5 { get; set; }

        [global::Bond.Id(24)]
        public float m_float_3 { get; set; }

        [global::Bond.Id(25)]
        public float m_float_4 { get; set; }

        [global::Bond.Id(26)]
        public float m_float_7 { get; set; }

        [global::Bond.Id(27)]
        public EnumType1 m_enum1 { get; set; }

        [global::Bond.Id(28)]
        public EnumType1 m_enum2 { get; set; }

        [global::Bond.Id(29), global::Bond.Type(typeof(global::Bond.Tag.wstring))]
        public string m_wstr_1 { get; set; }

        [global::Bond.Id(30), global::Bond.Type(typeof(global::Bond.Tag.wstring))]
        public string m_wstr_2 { get; set; }

        public StructWithDefaults()
            : this("UnitTest.StructWithDefaults", "StructWithDefaults")
        {}

        protected StructWithDefaults(string fullName, string name)
        {
            m_bool_1 = true;
            m_bool_2 = false;
            m_str_1 = "default string value";
            m_str_2 = "";
            m_int8_4 = -127;
            m_int16_4 = -32767;
            m_int32_max = 2147483647;
            m_int64_max = 9223372036854775807;
            m_uint8_2 = 255;
            m_uint16_2 = 65535;
            m_uint32_max = 4294967295;
            m_uint64_max = 18446744073709551615;
            m_double_4 = -123.456789;
            m_double_5 = -0.0;
            m_float_4 = 2.71828183F;
            m_float_7 = 0.0F;
            m_enum1 = EnumType1.EnumValue1;
            m_enum2 = EnumType1.EnumValue3;
            m_wstr_1 = "default wstring value";
            m_wstr_2 = "";
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class StructWithBonded
    {
        [global::Bond.Id(0)]
        public global::Bond.IBonded<Nested> field { get; set; }

        [global::Bond.Id(1)]
        public List<global::Bond.IBonded<Nested>> poly { get; set; }

        public StructWithBonded()
            : this("UnitTest.StructWithBonded", "StructWithBonded")
        {}

        protected StructWithBonded(string fullName, string name)
        {
            field = global::Bond.Bonded<Nested>.Empty;
            poly = new List<global::Bond.IBonded<Nested>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class StructWithBlobs
    {
        [global::Bond.Id(0)]
        public System.ArraySegment<byte> b { get; set; }

        [global::Bond.Id(1)]
        public List<System.ArraySegment<byte>> lb { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(global::Bond.Tag.nullable<System.ArraySegment<byte>>))]
        public System.ArraySegment<byte> nb { get; set; }

        public StructWithBlobs()
            : this("UnitTest.StructWithBlobs", "StructWithBlobs")
        {}

        protected StructWithBlobs(string fullName, string name)
        {
            b = new System.ArraySegment<byte>();
            lb = new List<System.ArraySegment<byte>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class StructWithByteLists
    {
        [global::Bond.Id(0)]
        public List<sbyte> b { get; set; }

        [global::Bond.Id(1)]
        public List<List<sbyte>> lb { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(global::Bond.Tag.nullable<List<sbyte>>))]
        public List<sbyte> nb { get; set; }

        public StructWithByteLists()
            : this("UnitTest.StructWithByteLists", "StructWithByteLists")
        {}

        protected StructWithByteLists(string fullName, string name)
        {
            b = new List<sbyte>();
            lb = new List<List<sbyte>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class GenericNothingClass<T>
    {
        [global::Bond.Id(4), global::Bond.Type(typeof(global::Bond.Tag.classT))]
        public T nothingField { get; set; }

        public GenericNothingClass()
            : this("UnitTest.GenericNothingClass", "GenericNothingClass")
        {}

        protected GenericNothingClass(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class GenericNothingScalar<T>
        where T : struct
    {
        [global::Bond.Id(4), global::Bond.Type(typeof(global::Bond.Tag.structT?))]
        public T? nothingField { get; set; }

        public GenericNothingScalar()
            : this("UnitTest.GenericNothingScalar", "GenericNothingScalar")
        {}

        protected GenericNothingScalar(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class GenericClass<T>
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.classT))]
        public T field { get; set; }

        [global::Bond.Id(1), global::Bond.Type(typeof(List<global::Bond.Tag.classT>))]
        public List<T> vectorField { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(LinkedList<GenericClass<global::Bond.Tag.classT>>))]
        public LinkedList<GenericClass<T>> listGeneric { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.nullable<global::Bond.Tag.classT>))]
        public T nullableField { get; set; }

        [global::Bond.Id(4), global::Bond.Type(typeof(Dictionary<string, global::Bond.Tag.classT>))]
        public Dictionary<string, T> mapField { get; set; }

        public GenericClass()
            : this("UnitTest.GenericClass", "GenericClass")
        {}

        protected GenericClass(string fullName, string name)
        {
            field = global::Bond.GenericFactory.Create<T>();
            vectorField = new List<T>();
            listGeneric = new LinkedList<GenericClass<T>>();
            mapField = new Dictionary<string, T>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class GenericScalar<T>
        where T : struct
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.structT))]
        public T field { get; set; }

        [global::Bond.Id(1), global::Bond.Type(typeof(List<global::Bond.Tag.structT>))]
        public List<T> vectorField { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(LinkedList<GenericScalar<global::Bond.Tag.structT>>))]
        public LinkedList<GenericScalar<T>> listGeneric { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.nullable<global::Bond.Tag.structT>))]
        public T? nullableField { get; set; }

        [global::Bond.Id(4), global::Bond.Type(typeof(Dictionary<global::Bond.Tag.structT, global::Bond.Tag.structT>))]
        public Dictionary<T, T> mapField { get; set; }

        public GenericScalar()
            : this("UnitTest.GenericScalar", "GenericScalar")
        {}

        protected GenericScalar(string fullName, string name)
        {
            field = global::Bond.GenericFactory.Create<T>();
            vectorField = new List<T>();
            listGeneric = new LinkedList<GenericScalar<T>>();
            mapField = new Dictionary<T, T>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class GenericBonded<T>
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.IBonded<global::Bond.Tag.classT>))]
        public global::Bond.IBonded<T> field { get; set; }

        [global::Bond.Id(1), global::Bond.Type(typeof(List<global::Bond.IBonded<global::Bond.Tag.classT>>))]
        public List<global::Bond.IBonded<T>> poly { get; set; }

        public GenericBonded()
            : this("UnitTest.GenericBonded", "GenericBonded")
        {}

        protected GenericBonded(string fullName, string name)
        {
            field = global::Bond.Bonded<T>.Empty;
            poly = new List<global::Bond.IBonded<T>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class BondedGeneric
    {
        [global::Bond.Id(0)]
        public GenericClass<global::Bond.IBonded<Nested>> cbt { get; set; }

        [global::Bond.Id(1), global::Bond.Type(typeof(GenericClass<global::Bond.IBonded<GenericClass<global::Bond.Tag.wstring>>>))]
        public GenericClass<global::Bond.IBonded<GenericClass<string>>> cbgws { get; set; }

        public BondedGeneric()
            : this("UnitTest.BondedGeneric", "BondedGeneric")
        {}

        protected BondedGeneric(string fullName, string name)
        {
            cbt = new GenericClass<global::Bond.IBonded<Nested>>();
            cbgws = new GenericClass<global::Bond.IBonded<GenericClass<string>>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class GenericDerived<T>
        : GenericClass<T>
    {
        
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Generics
    {
        [global::Bond.Id(10)]
        public GenericScalar<bool> sb { get; set; }

        [global::Bond.Id(11)]
        public GenericScalar<float> sf { get; set; }

        [global::Bond.Id(12)]
        public GenericScalar<ulong> sui64 { get; set; }

        [global::Bond.Id(13)]
        public GenericScalar<EnumType1> se { get; set; }

        [global::Bond.Id(20)]
        public GenericClass<HashSet<int>> ci32 { get; set; }

        [global::Bond.Id(21)]
        public GenericClass<System.ArraySegment<byte>> cblob { get; set; }

        [global::Bond.Id(22)]
        public GenericClass<string> cs { get; set; }

        [global::Bond.Id(23)]
        public GenericClass<List<System.ArraySegment<byte>>> cvblob { get; set; }

        [global::Bond.Id(24)]
        public GenericClass<BasicTypes> cbt { get; set; }

        [global::Bond.Id(25), global::Bond.Type(typeof(GenericClass<global::Bond.Tag.wstring>))]
        public GenericClass<string> cws { get; set; }

        [global::Bond.Id(26), global::Bond.Type(typeof(GenericClass<global::Bond.Tag.nullable<global::Bond.Tag.wstring>>))]
        public GenericClass<string> cnws { get; set; }

        [global::Bond.Id(27), global::Bond.Type(typeof(GenericClass<global::Bond.Tag.nullable<ulong>>))]
        public GenericClass<ulong?> snui64 { get; set; }

        [global::Bond.Id(28), global::Bond.Type(typeof(GenericClass<LinkedList<global::Bond.Tag.wstring>>))]
        public GenericClass<LinkedList<string>> slws { get; set; }

        [global::Bond.Id(29), global::Bond.Type(typeof(GenericClass<Dictionary<global::Bond.Tag.wstring, global::Bond.Tag.nullable<short>>>))]
        public GenericClass<Dictionary<string, short?>> smwsni { get; set; }

        public Generics()
            : this("UnitTest.Generics", "Generics")
        {}

        protected Generics(string fullName, string name)
        {
            sb = new GenericScalar<bool>();
            sf = new GenericScalar<float>();
            sui64 = new GenericScalar<ulong>();
            se = new GenericScalar<EnumType1>();
            ci32 = new GenericClass<HashSet<int>>();
            cblob = new GenericClass<System.ArraySegment<byte>>();
            cs = new GenericClass<string>();
            cvblob = new GenericClass<List<System.ArraySegment<byte>>>();
            cbt = new GenericClass<BasicTypes>();
            cws = new GenericClass<string>();
            cnws = new GenericClass<string>();
            snui64 = new GenericClass<ulong?>();
            slws = new GenericClass<LinkedList<string>>();
            smwsni = new GenericClass<Dictionary<string, short?>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class GenericInheritance
    {
        [global::Bond.Id(0)]
        public GenericDerived<BasicTypes> bbt { get; set; }

        [global::Bond.Id(1), global::Bond.Type(typeof(GenericDerived<GenericClass<global::Bond.Tag.wstring>>))]
        public GenericDerived<GenericClass<string>> bgws { get; set; }

        public GenericInheritance()
            : this("UnitTest.GenericInheritance", "GenericInheritance")
        {}

        protected GenericInheritance(string fullName, string name)
        {
            bbt = new GenericDerived<BasicTypes>();
            bgws = new GenericDerived<GenericClass<string>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class GenericsWithNothing
    {
        [global::Bond.Id(10)]
        public GenericNothingScalar<bool> sb { get; set; }

        [global::Bond.Id(11)]
        public GenericNothingScalar<float> sf { get; set; }

        [global::Bond.Id(12)]
        public GenericNothingScalar<ulong> sui64 { get; set; }

        [global::Bond.Id(13)]
        public GenericNothingScalar<EnumType1> se { get; set; }

        [global::Bond.Id(20)]
        public GenericNothingClass<HashSet<int>> ci32 { get; set; }

        [global::Bond.Id(21)]
        public GenericNothingClass<System.ArraySegment<byte>> cblob { get; set; }

        [global::Bond.Id(22)]
        public GenericNothingClass<string> cs { get; set; }

        [global::Bond.Id(23)]
        public GenericNothingClass<List<System.ArraySegment<byte>>> cvblob { get; set; }

        [global::Bond.Id(24), global::Bond.Type(typeof(GenericNothingClass<global::Bond.Tag.wstring>))]
        public GenericNothingClass<string> cws { get; set; }

        [global::Bond.Id(25), global::Bond.Type(typeof(GenericNothingClass<List<global::Bond.Tag.wstring>>))]
        public GenericNothingClass<List<string>> cvws { get; set; }

        public GenericsWithNothing()
            : this("UnitTest.GenericsWithNothing", "GenericsWithNothing")
        {}

        protected GenericsWithNothing(string fullName, string name)
        {
            sb = new GenericNothingScalar<bool>();
            sf = new GenericNothingScalar<float>();
            sui64 = new GenericNothingScalar<ulong>();
            se = new GenericNothingScalar<EnumType1>();
            ci32 = new GenericNothingClass<HashSet<int>>();
            cblob = new GenericNothingClass<System.ArraySegment<byte>>();
            cs = new GenericNothingClass<string>();
            cvblob = new GenericNothingClass<List<System.ArraySegment<byte>>>();
            cws = new GenericNothingClass<string>();
            cvws = new GenericNothingClass<List<string>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class BoxWstring
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.wstring))]
        public string value { get; set; }

        public BoxWstring()
            : this("UnitTest.BoxWstring", "BoxWstring")
        {}

        protected BoxWstring(string fullName, string name)
        {
            value = "";
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Box<T>
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.classT))]
        public T value { get; set; }

        public Box()
            : this("UnitTest.Box", "Box")
        {}

        protected Box(string fullName, string name)
        {
            value = global::Bond.GenericFactory.Create<T>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class GenericWString
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(Box<global::Bond.Tag.wstring>))]
        public Box<string> wstr { get; set; }

        public GenericWString()
            : this("UnitTest.GenericWString", "GenericWString")
        {}

        protected GenericWString(string fullName, string name)
        {
            wstr = new Box<string>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class NonGenericWString
    {
        [global::Bond.Id(0)]
        public BoxWstring wstr { get; set; }

        public NonGenericWString()
            : this("UnitTest.NonGenericWString", "NonGenericWString")
        {}

        protected NonGenericWString(string fullName, string name)
        {
            wstr = new BoxWstring();
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public enum TypeAttribute
    {
        DefaultAttribute,
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class IdAttribute
    {
        [global::Bond.Id(0)]
        public TypeAttribute field { get; set; }

        public IdAttribute()
            : this("UnitTest.IdAttribute", "IdAttribute")
        {}

        protected IdAttribute(string fullName, string name)
        {
            field = TypeAttribute.DefaultAttribute;
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class classT
    {
        
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class structT
    {
        
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class GenericConflict<structT>
        where structT : struct
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.structT))]
        public structT field { get; set; }

        public GenericConflict()
            : this("UnitTest.GenericConflict", "GenericConflict")
        {}

        protected GenericConflict(string fullName, string name)
        {
            field = global::Bond.GenericFactory.Create<structT>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Foo<classT>
    {
        [global::Bond.Id(0), global::Bond.Type(typeof(global::Bond.Tag.classT))]
        public classT field { get; set; }

        public Foo()
            : this("UnitTest.Foo", "Foo")
        {}

        protected Foo(string fullName, string name)
        {
            field = global::Bond.GenericFactory.Create<classT>();
        }
    }

    [global::Bond.Attribute("polymorphic", "")]
    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class WithPolymorphic
    {
        [global::Bond.Id(0), global::Bond.RequiredOptional]
        public string _bond_meta { get; set; }

        [global::Bond.Id(1)]
        public string a { get; set; }

        public WithPolymorphic()
            : this("UnitTest.WithPolymorphic", "WithPolymorphic")
        {}

        protected WithPolymorphic(string fullName, string name)
        {
            _bond_meta = fullName;
            a = "a";
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class DerivedPolymorphic
        : WithPolymorphic
    {
        [global::Bond.Id(2)]
        public string b { get; set; }

        public DerivedPolymorphic()
            : this("UnitTest.DerivedPolymorphic", "DerivedPolymorphic")
        {}

        protected DerivedPolymorphic(string fullName, string name)
            : base(fullName, name)
        {
            b = "b";
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class WithMeta
    {
        [global::Bond.Id(1), global::Bond.RequiredOptional]
        public string theName { get; set; }

        [global::Bond.Id(2), global::Bond.RequiredOptional]
        public string theFullName { get; set; }

        [global::Bond.Id(3)]
        public string a { get; set; }

        public WithMeta()
            : this("UnitTest.WithMeta", "WithMeta")
        {}

        protected WithMeta(string fullName, string name)
        {
            theName = name;
            theFullName = fullName;
            a = "a";
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class DerivedWithMeta
        : WithMeta
    {
        [global::Bond.Id(1), global::Bond.RequiredOptional]
        public string anotherName { get; set; }

        [global::Bond.Id(2)]
        public string b { get; set; }

        public DerivedWithMeta()
            : this("UnitTest.DerivedWithMeta", "DerivedWithMeta")
        {}

        protected DerivedWithMeta(string fullName, string name)
            : base(fullName, name)
        {
            anotherName = fullName;
            b = "b";
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class WithConflictingMeta
    {
        [global::Bond.Id(1)]
        public string name { get; set; }

        [global::Bond.Id(2)]
        public string fullName { get; set; }

        [global::Bond.Id(3), global::Bond.RequiredOptional]
        public string meta { get; set; }

        public WithConflictingMeta()
            : this("UnitTest.WithConflictingMeta", "WithConflictingMeta")
        {}

        protected WithConflictingMeta(string fullName, string name)
        {
            this.name = "Foo";
            this.fullName = "Bar";
            meta = fullName;
        }
    }
} // UnitTest
