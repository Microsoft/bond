
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.6.0.0
//   File : compat_types.cs
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------


// suppress "Missing XML comment for publicly visible type or member"
#pragma warning disable 1591


#region ReSharper warnings
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable InconsistentNaming
// ReSharper disable CheckNamespace
// ReSharper disable UnusedParameter.Local
// ReSharper disable RedundantUsingDirective
#endregion

namespace unittest.compat
{
    using System.Collections.Generic;

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Generic1<T>
    {
        [global::Bond.Id(1), global::Bond.Type(typeof(global::Bond.Tag.classT))]
        public T m_T { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(LinkedList<global::Bond.Tag.classT>))]
        public LinkedList<T> m_listT { get; set; }

        public Generic1()
            : this("unittest.compat.Generic1", "Generic1")
        {}

        protected Generic1(string fullName, string name)
        {
            m_T = global::Bond.GenericFactory.Create<T>();
            m_listT = new LinkedList<T>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Generic2<T>
        : Generic1<T>
        where T : struct
    {
        [global::Bond.Id(1)]
        public Generic1<int> m_generic1 { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(Dictionary<bool, global::Bond.Tag.structT>))]
        public Dictionary<bool, T> m_mapT { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.nullable<global::Bond.Tag.structT>))]
        public T? m_nullableT { get; set; }

        [global::Bond.Id(4), global::Bond.Type(typeof(Generic1<global::Bond.Tag.structT>))]
        public Generic1<T> m_generic1_T { get; set; }

        [global::Bond.Id(5), global::Bond.Type(typeof(Generic1<global::Bond.Tag.wstring>))]
        public Generic1<string> m_generic1_wstring { get; set; }

        public Generic2()
            : this("unittest.compat.Generic2", "Generic2")
        {}

        protected Generic2(string fullName, string name)
        {
            m_generic1 = new Generic1<int>();
            m_mapT = new Dictionary<bool, T>();
            m_generic1_T = new Generic1<T>();
            m_generic1_wstring = new Generic1<string>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Generic4<T>
        : Generic1<T>
    {
        [global::Bond.Id(1)]
        public Generic1<int> m_generic1 { get; set; }

        [global::Bond.Id(2), global::Bond.Type(typeof(Dictionary<bool, global::Bond.Tag.classT>))]
        public Dictionary<bool, T> m_mapT { get; set; }

        [global::Bond.Id(3), global::Bond.Type(typeof(global::Bond.Tag.nullable<global::Bond.Tag.classT>))]
        public T m_nullableT { get; set; }

        [global::Bond.Id(4), global::Bond.Type(typeof(Generic1<global::Bond.Tag.classT>))]
        public Generic1<T> m_generic1_T { get; set; }

        [global::Bond.Id(5), global::Bond.Type(typeof(Generic1<global::Bond.Tag.wstring>))]
        public Generic1<string> m_generic1_wstring { get; set; }

        public Generic4()
            : this("unittest.compat.Generic4", "Generic4")
        {}

        protected Generic4(string fullName, string name)
        {
            m_generic1 = new Generic1<int>();
            m_mapT = new Dictionary<bool, T>();
            m_generic1_T = new Generic1<T>();
            m_generic1_wstring = new Generic1<string>();
        }
    }

    [global::Bond.Attribute("bar", "foo")]
    [global::Bond.Attribute("qux", "baz")]
    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Compat
        : WithBase
    {
        [global::Bond.Id(0)]
        public BasicTypes m_basicTypes { get; set; }

        [global::Bond.Id(1)]
        public Containers m_containers { get; set; }

        [global::Bond.Id(2)]
        public WithBase m_withBase { get; set; }

        [global::Bond.Id(4), global::Bond.Type(typeof(global::Bond.Tag.nullable<string>))]
        public string m_nullable_string { get; set; }

        [global::Bond.Id(5), global::Bond.Type(typeof(global::Bond.Tag.nullable<ulong>))]
        public ulong? m_nullable_uint64 { get; set; }

        [global::Bond.Id(6)]
        public Generic2<float> m_generic2 { get; set; }

        [global::Bond.Id(7)]
        public Generic1<bool> m_generic1 { get; set; }

        [global::Bond.Id(8)]
        public Generic4<WithBase> m_generic0 { get; set; }

        [global::Bond.Id(9)]
        public Generic4<global::unittest.compat.another.Another> m_generic_another_struct { get; set; }

        [global::Bond.Id(10)]
        public Generic2<global::unittest.compat.another.EnumType> m_generic_another_enum { get; set; }

        [global::Bond.Id(11), global::Bond.Type(typeof(global::Bond.Tag.nullable<Compat>))]
        public Compat m_defaults { get; set; }

        [global::Bond.Id(12)]
        public global::Bond.IBonded<BasicTypesUninitialized> m_basicUnintialized { get; set; }

        [global::Bond.Attribute("JsonName", "enum1")]
        [global::Bond.Id(13)]
        new public EnumType2 m_enum1 { get; set; }

        [global::Bond.Attribute("JsonName", "enum2")]
        [global::Bond.Id(14)]
        new public EnumType2 m_enum2 { get; set; }

        [global::Bond.Attribute("JsonName", "enum3")]
        [global::Bond.Id(15)]
        new public EnumType2 m_enum3 { get; set; }

        [global::Bond.Id(16)]
        public EnumType2 m_enum4 { get; set; }

        [global::Bond.Id(17)]
        public EnumType2 m_enum5 { get; set; }

        [global::Bond.Id(18)]
        public EnumType2 m_enum6 { get; set; }

        [global::Bond.Id(8191), global::Bond.Type(typeof(global::Bond.Tag.nullable<BasicTypes>))]
        public BasicTypes m_nullable { get; set; }

        public Compat()
            : this("unittest.compat.Compat", "Compat")
        {}

        protected Compat(string fullName, string name)
        {
            m_basicTypes = new BasicTypes();
            m_containers = new Containers();
            m_withBase = new WithBase();
            m_generic2 = new Generic2<float>();
            m_generic1 = new Generic1<bool>();
            m_generic0 = new Generic4<WithBase>();
            m_generic_another_struct = new Generic4<global::unittest.compat.another.Another>();
            m_generic_another_enum = new Generic2<global::unittest.compat.another.EnumType>();
            m_basicUnintialized = global::Bond.Bonded<BasicTypesUninitialized>.Empty;
            m_enum1 = EnumType2.EnumValue1;
            m_enum2 = EnumType2.EnumValue2;
            m_enum3 = EnumType2.EnumValue3;
            m_enum4 = EnumType2.EnumValue4;
            m_enum5 = EnumType2.EnumValue5;
            m_enum6 = EnumType2.EnumValue6;
        }
    }
} // unittest.compat
