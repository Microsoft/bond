
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.6.0.0
//   File : schemas_types.cs
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------


// suppress "Missing XML comment for publicly visible type or member"
#pragma warning disable 1591


#region ReSharper warnings
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable InconsistentNaming
// ReSharper disable CheckNamespace
// ReSharper disable UnusedParameter.Local
// ReSharper disable RedundantUsingDirective
#endregion

namespace ExpressionsTest
{
    using System.Collections.Generic;

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Base
    {
        [global::Bond.Id(0)]
        public List<List<ulong>> vvb { get; set; }

        public Base()
            : this("ExpressionsTest.Base", "Base")
        {}

        protected Base(string fullName, string name)
        {
            vvb = new List<List<ulong>>();
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Nested
    {
        [global::Bond.Id(0)]
        public double _double { get; set; }

        public Nested()
            : this("ExpressionsTest.Nested", "Nested")
        {}

        protected Nested(string fullName, string name)
        {
            
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.6.0.0")]
    public partial class Example
        : Base
    {
        [global::Bond.Id(0)]
        public bool _bool { get; set; }

        [global::Bond.Id(2)]
        public string _str { get; set; }

        [global::Bond.Attribute("JsonName", "JsonUint32")]
        [global::Bond.Id(12)]
        public uint _uint32 { get; set; }

        [global::Bond.Id(14)]
        public sbyte _int8 { get; set; }

        [global::Bond.Id(17), global::Bond.Required]
        public long _int64 { get; set; }

        [global::Bond.Id(18)]
        public double _double { get; set; }

        [global::Bond.Id(20)]
        public global::Bond.GUID guid { get; set; }

        [global::Bond.Id(30)]
        public List<int> _int32Vector { get; set; }

        [global::Bond.Id(40)]
        public LinkedList<Nested> _nestedVector { get; set; }

        [global::Bond.Id(50)]
        public System.ArraySegment<byte> b { get; set; }

        [global::Bond.Id(60)]
        public Dictionary<int, double> _map { get; set; }

        public Example()
            : this("ExpressionsTest.Example", "Example")
        {}

        protected Example(string fullName, string name)
        {
            _str = "";
            guid = new global::Bond.GUID();
            _int32Vector = new List<int>();
            _nestedVector = new LinkedList<Nested>();
            b = new System.ArraySegment<byte>();
            _map = new Dictionary<int, double>();
        }
    }
} // ExpressionsTest
