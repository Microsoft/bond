---
name: Linux CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  tests:
    name: "${{ matrix.env.FLAVOR }} ${{ matrix.env.BOOST }} ${{ matrix.env.COMPILER }}"
    runs-on: "ubuntu-latest"

    container:
      image: bondciimages.azurecr.io/ubuntu-1604:build-32869346

    strategy:
      fail-fast: false
      matrix:
        env:
          - { FLAVOR: cs }
          - { FLAVOR: cpp-core, BOOST: 1.66.0, COMPILER: clang }
          - { FLAVOR: cpp-grpc, BOOST: 1.66.0, COMPILER: clang }
          - { FLAVOR: hs }
          - { FLAVOR: java }

          # - { FLAVOR: cpp-core, BOOST: 1.65.1, COMPILER: clang, CRON_ONLY: true }
          # - { FLAVOR: cpp-core, BOOST: 1.64.0, COMPILER: clang, CRON_ONLY: true }
          # - { FLAVOR: cpp-core, BOOST: 1.63.0, COMPILER: clang, CRON_ONLY: true }
          # - { FLAVOR: cpp-core, BOOST: 1.62.0, COMPILER: clang, CRON_ONLY: true }
          # - { FLAVOR: cpp-core, BOOST: 1.61.0, COMPILER: clang, CRON_ONLY: true }

          # - { FLAVOR: cpp-grpc, BOOST: 1.65.1, COMPILER: clang, CRON_ONLY: true }
          # - { FLAVOR: cpp-grpc, BOOST: 1.64.0, COMPILER: clang, CRON_ONLY: true }
          # - { FLAVOR: cpp-grpc, BOOST: 1.63.0, COMPILER: clang, CRON_ONLY: true }
          # - { FLAVOR: cpp-grpc, BOOST: 1.62.0, COMPILER: clang, CRON_ONLY: true }
          # - { FLAVOR: cpp-grpc, BOOST: 1.61.0, COMPILER: clang, CRON_ONLY: true }

          # - { FLAVOR: cpp-core, BOOST: 1.66.0, COMPILER: gcc, CRON_ONLY: true }
          # - { FLAVOR: cpp-core, BOOST: 1.65.1, COMPILER: gcc, CRON_ONLY: true }
          # - { FLAVOR: cpp-core, BOOST: 1.64.0, COMPILER: gcc, CRON_ONLY: true }
          # - { FLAVOR: cpp-core, BOOST: 1.63.0, COMPILER: gcc, CRON_ONLY: true }
          # - { FLAVOR: cpp-core, BOOST: 1.62.0, COMPILER: gcc, CRON_ONLY: true }
          # - { FLAVOR: cpp-core, BOOST: 1.61.0, COMPILER: gcc, CRON_ONLY: true }

          # - { FLAVOR: cpp-grpc, BOOST: 1.66.0, COMPILER: gcc, CRON_ONLY: true }
          # - { FLAVOR: cpp-grpc, BOOST: 1.65.1, COMPILER: gcc, CRON_ONLY: true }
          # - { FLAVOR: cpp-grpc, BOOST: 1.64.0, COMPILER: gcc, CRON_ONLY: true }
          # - { FLAVOR: cpp-grpc, BOOST: 1.63.0, COMPILER: gcc, CRON_ONLY: true }
          # - { FLAVOR: cpp-grpc, BOOST: 1.62.0, COMPILER: gcc, CRON_ONLY: true }
          # - { FLAVOR: cpp-grpc, BOOST: 1.61.0, COMPILER: gcc, CRON_ONLY: true }

          # - { FLAVOR: cpp-grpc-master, BOOST: 1.66.0, COMPILER: clang, CRON_ONLY: true }
    
    env: ${{ matrix.env }}

    steps:
      - name: "Update git - ver has to be at least Git 2.18"
        run: |
          add-apt-repository ppa:git-core/ppa -y
          apt-get update
          apt-get install git -y
      - name: "Git checkout"
        uses: "actions/checkout@v2"
        with:
          submodules: true
      - uses: actions/cache@v2
        with:
          path: cs/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: "Build and test for ${{ matrix.env.FLAVOR }} ${{ matrix.env.BOOST }} ${{ matrix.env.COMPILER }}"
        run: |
          set -xe
          mkdir /github/home/.stack
          sed -i 's@/root/bond@'"$(pwd)"'@g' tools/ci-scripts/linux/build.zsh
          sed -i 's@/root/bond@'"$(pwd)"'@g' tools/ci-scripts/linux/build_cpp-common.zsh
          sed -i 's@--tags@--tags --no-recurse-submodules@g' tools/ci-scripts/linux/build_java.zsh
          zsh tools/ci-scripts/linux/build.zsh $(pwd) ${{ env.FLAVOR }} ${{ env.BOOST }} ${{ env.COMPILER}}
